import java.text.SimpleDateFormat;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class RegistrationPanel extends JPanel {

    private JTextField nameField, mobileField, addressField;
    private JRadioButton maleButton, femaleButton;
    private JCheckBox termsCheckBox;
    private JDateChooser dateChooser;
    private JTable table;
    private DefaultTableModel tableModel;
    
    public RegistrationPanel() {
        initComponents();
    }

    private void initComponents() {
        setLayout(null);
        
        JLabel titleLabel = new JLabel("Registration Form");
        titleLabel.setBounds(150, 10, 200, 30);
        add(titleLabel);

        JLabel nameLabel = new JLabel("Name:");
        nameLabel.setBounds(30, 50, 80, 25);
        add(nameLabel);
        
        nameField = new JTextField();
        nameField.setBounds(120, 50, 200, 25);
        add(nameField);
        
        JLabel mobileLabel = new JLabel("Mobile:");
        mobileLabel.setBounds(30, 90, 80, 25);
        add(mobileLabel);
        
        mobileField = new JTextField();
        mobileField.setBounds(120, 90, 200, 25);
        add(mobileField);
        
        JLabel genderLabel = new JLabel("Gender:");
        genderLabel.setBounds(30, 130, 80, 25);
        add(genderLabel);
        
        maleButton = new JRadioButton("Male");
        femaleButton = new JRadioButton("Female");
        maleButton.setBounds(120, 130, 80, 25);
        femaleButton.setBounds(200, 130, 80, 25);
        
        ButtonGroup genderGroup = new ButtonGroup();
        genderGroup.add(maleButton);
        genderGroup.add(femaleButton);
        add(maleButton);
        add(femaleButton);
        
        JLabel dobLabel = new JLabel("DOB:");
        dobLabel.setBounds(30, 170, 80, 25);
        add(dobLabel);
        
        dateChooser = new JDateChooser();
        dateChooser.setBounds(120, 170, 200, 25);
        add(dateChooser);
        
        JLabel addressLabel = new JLabel("Address:");
        addressLabel.setBounds(30, 210, 80, 25);
        add(addressLabel);
        
        addressField = new JTextField();
        addressField.setBounds(120, 210, 200, 25);
        add(addressField);
        
        termsCheckBox = new JCheckBox("Accept Terms & Conditions");
        termsCheckBox.setBounds(120, 250, 200, 25);
        add(termsCheckBox);
        
        JButton submitButton = new JButton("Submit");
        submitButton.setBounds(50, 290, 100, 30);
        submitButton.addActionListener(e -> handleSubmit());
        add(submitButton);
        
        JButton resetButton = new JButton("Reset");
        resetButton.setBounds(180, 290, 100, 30);
        resetButton.addActionListener(e -> resetFields());
        add(resetButton);
        
        tableModel = new DefaultTableModel(new String[]{"Name", "Mobile", "Gender", "DOB", "Address"}, 0);
        table = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(table);
        scrollPane.setBounds(350, 50, 400, 250);
        add(scrollPane);
    }

    private void handleSubmit() {
        String name = nameField.getText().trim();
        String mobile = mobileField.getText().trim();
        String gender = maleButton.isSelected() ? "Male" : femaleButton.isSelected() ? "Female" : "";
        String address = addressField.getText().trim();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String dob = dateChooser.getDate() != null ? sdf.format(dateChooser.getDate()) : "";

        if (name.isEmpty() || mobile.isEmpty() || gender.isEmpty() || address.isEmpty() || dob.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are required!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!mobile.matches("\\d{10}")) {
            JOptionPane.showMessageDialog(this, "Enter a valid 10-digit mobile number!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!termsCheckBox.isSelected()) {
            JOptionPane.showMessageDialog(this, "You must accept the Terms & Conditions!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        tableModel.addRow(new Object[]{name, mobile, gender, dob, address});
        JOptionPane.showMessageDialog(this, "Registration Successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
        resetFields();
    }

    private void resetFields() {
        nameField.setText("");
        mobileField.setText("");
        addressField.setText("");
        maleButton.setSelected(false);
        femaleButton.setSelected(false);
        dateChooser.setDate(null);
        termsCheckBox.setSelected(false);
    }
    
    public static void main(String[] args) {
        JFrame frame = new JFrame("Registration Form");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(800, 400);
        frame.setLocationRelativeTo(null);
        frame.add(new RegistrationPanel());
        frame.setVisible(true);
    }
}
